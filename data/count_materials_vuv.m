ti_disr = 0;
ti_no = 0;
w_no = 0;
w_disr = 0;
o_disr = 0;
o_no = 0;
ni_disr = 0;
ni_no = 0;
mo_disr = 0;
mo_no = 0;
undefined_disr = 0;
undefined_no = 0;
al_disr = 0;
al_no = 0;
cu_disr = 0;
cu_no = 0;
combine_disr = 0;
combine_no = 0;

datavuv = importfile('data_vuv.xlsx');
ti_pulses = zeros(1, size(datavuv, 1));

for i = 1 : size(datavuv, 1)
    if datavuv.Disruption(i) == 0
        disr_flag = false;
    else
        disr_flag = true;
    end
    if datavuv.VUVKT2(i) == "?" || datavuv.VUVKT2(i) == "Nothing"
        if disr_flag
            undefined_disr = undefined_disr + 1;
        else
            undefined_no = undefined_no + 1;
        end
    else
        vuv_val = string(datavuv.VUVKT2(i));

        if contains(vuv_val, "Ti")
            if disr_flag
                ti_disr = ti_disr + 1;
                ti_pulses(i) = 1;
            else
                ti_no = ti_no + 1;
            end
        
        elseif contains(vuv_val, "/") || contains(vuv_val, ",")
            if disr_flag
                combine_disr = combine_disr + 1;
            else
                combine_no = combine_no + 1;
            end
        elseif contains(vuv_val, 'W')
            if disr_flag
                w_disr = w_disr + 1;
            else
                w_no = w_no + 1;
            end
        
        elseif contains(vuv_val, "O")
            if disr_flag
                o_disr = o_disr + 1;
            else
                o_no = o_no + 1;
            end
        
        elseif contains(vuv_val, "Ni")
            if disr_flag
                ni_disr = ni_disr + 1;
            else
                ni_no = ni_no + 1;
            end
        
        elseif contains(vuv_val, "Mo")
            if disr_flag
                mo_disr = mo_disr + 1;
            else
                mo_no = mo_no + 1;
            end
        
        elseif contains(vuv_val, "Cu")
            if disr_flag
                cu_disr = cu_disr + 1;
            else
                cu_no = cu_no + 1;
            end
        
        elseif contains(vuv_val, "Al")
            if disr_flag
                al_disr = al_disr + 1;
            else
                al_no = al_no + 1;
            end
            % if disr_flag
            %     other_disr = other_disr + 1;
            % else
            %     other_no = other_no + 1;
            % end
        end
    end
end

material = ["Ti"; "W"; "Cu"; "Ni"; "Mo",;"O"; "Al"; "Combined"; "Undefined"];
disr = [ti_disr; w_disr; cu_disr; ni_disr; mo_disr; o_disr;  al_disr; combine_disr; undefined_disr];
no_disr = [ti_no; w_no; cu_no; ni_no; mo_no; o_no;  al_no; combine_no; undefined_no];
tabla = table(material, disr, no_disr);

function datavuv = importfile(workbookFile, sheetName, dataLines)
%IMPORTFILE Import data from a spreadsheet
%  DATAVUV = IMPORTFILE(FILE) reads data from the first worksheet in the
%  Microsoft Excel spreadsheet file named FILE.  Returns the data as a
%  table.
%
%  DATAVUV = IMPORTFILE(FILE, SHEET) reads from the specified worksheet.
%
%  DATAVUV = IMPORTFILE(FILE, SHEET, DATALINES) reads from the specified
%  worksheet for the specified row interval(s). Specify DATALINES as a
%  positive scalar integer or a N-by-2 array of positive scalar integers
%  for dis-contiguous row intervals.
%
%  Example:
%  datavuv = importfile("C:\Users\Doctorando1\Documents\UFOs\data\data_vuv.xlsx", "Sheet1", [2, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 05-Apr-2024 14:28:58

%% Input handling

% If no sheet is specified, read first sheet
if nargin == 1 || isempty(sheetName)
    sheetName = 1;
end

% If row start and end points are not specified, define defaults
if nargin <= 2
    dataLines = [2, Inf];
end

%% Set up the Import Options and import the data
opts = spreadsheetImportOptions("NumVariables", 12);

% Specify sheet and range
opts.Sheet = sheetName;
opts.DataRange = dataLines(1, :);

% Specify column names and types
opts.VariableNames = ["VarName1", "Pulse", "OpCam", "Time", "ExpCam", "Disruption", "Comments", "MeasuredSpeed", "Comments_personal", "Initial_pos", "VUVKT2", "VUVComment"];
opts.VariableTypes = ["double", "double", "double", "double", "categorical", "double", "string", "double", "string", "string", "categorical", "string"];

% Specify variable properties
opts = setvaropts(opts, ["Comments", "Comments_personal", "Initial_pos", "VUVComment"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["ExpCam", "Comments", "Comments_personal", "Initial_pos", "VUVKT2", "VUVComment"], "EmptyFieldRule", "auto");

% Import the data
datavuv = readtable(workbookFile, opts, "UseExcel", false);

for idx = 2:size(dataLines, 1)
    opts.DataRange = dataLines(idx, :);
    tb = readtable(workbookFile, opts, "UseExcel", false);
    datavuv = [datavuv; tb]; %#ok<AGROW>
end

end